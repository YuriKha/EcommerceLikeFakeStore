// דף לניהול שרתי אינטרנט

//-------------------ספריית express-------------------------- 
const express=require('express'); // חיבור לסיפריית אקספרס
const app=express(); // יצירת האובייקט מסוג הספריה 
// אפשר לקצר את 2 השורות למעלה ל פקודה אחת
// const app2=require('express')();
//-----------------------------------------------------------

//-----------------ספריית CORS------------------------------
// מאפשרת בקרת גישה לפי מקור שיטות והדרים
const cors = require('cors');
app.use(cors()); // נותן גישה לכולם
// במידה ואני רוצה לתת גישה רק למספר מוגבל של אתרים
// app.use(cors({  
//     origin:['http://google.co.il','https://ksp.co.il'] // פה אפשר לציין באופן מפורש למי לתת גישה 
//     אפשר גם להגביל את צורות הפניה לשרת שלנו
// })); 
//-----------------------------------------------------------

//----------------ספריית morgan-------תיעוד לכל הבקשות------
const morgan=require('morgan'); //חיבור לסיפריית מורגן
app.use(morgan('dev')); // מתוך מספר ספריות של מורגן אנחנו נבחר ספריית דב
// בגלל שמיקמנו ספריה זו לאחר ספריית קורס יהיו לוגים רק למי שקיבל גישה
// במידה והיינו מגבילים גישה לאתרים מסויימים דרך הקורס המורגן לא היה מתעד זאת
//-----------------------------------------------------------

//---------- חיבור לספריית מונגוס --------------------------
const mongoose=require('mongoose');
//-----------------------------------------------------------

//--------משמשת לטעינת הגדרות המערכת ----------------------
require('dotenv').config(); //-- חיבור לקובץ שמכיל בתוכו משתנים שבתוכם תוכן רגיש .env --
// על מנת לקבל גישה למשתנים הקיימים בקובץ יש לכתוב 
//process.env 
// לאחר מכן נקודה ושם המשתנה
//-----------------------------------------------------------

//-- ניתוב לתוך תקיוית הראוטר אשר מכילה ניתובים ---
// פה אני ממציא את שם המשתמש 
const ProductRouter=require('./api/routes/prodect'); // מקבל את הנתיב בו יש ניתובים למוצרים שלי
const UserRouter=require('./api/routes/user'); // מקבל את הנתיב בו יש ניתובים למשתמשים שלי
//-----------------------------------------------------------

//----------------- שכבה שיצרתי להרשאות -------------------
const Authorization=require('./api/middlewares/Authorization');
// במידה ואני רוצה להגביל גישה לאחד הניתובים
// אדאג להוסיף את Authorization
// בניתוב ששולח לראוטר שמטפל בבקשה
// לדוגמא
////app.use('/product',Authorization=,ProductRouter); 
// במקרה זה רק למי שיש תוקן יכול לגשת לניתובים של מוצרים
//-----------------------------------------------------------

//----------- המרת נתונים גולמיים לג'ייסון או URL ENCODED  ----------
// הוספת שכבה שממירה את הנתונים הגולמיים שמתקבלים לפורמט json
app.use(express.json());
//-----------------------------------------------------------
// הוספת שכבה שממירה את הנתונים הגולמיים שמתקבלים לפורמט urlencoded
app.use(express.urlencoded({
    extended:false
}));
// ישנם מספר פורמטים להמרת נתונים 2 אלו הם הנפוצים ביותר
//-----------------------------------------------------------

//----- חיבור לבסיס נתונים של מונגו -----------------------
const uri = process.env.MONGO_CONN_STR;  //  משתמש במשתנה שקיים בתוך קובץ .env בתוכו קיים מחרוזת ההתחברות אני בכוונה מסתיר
mongoose.connect(uri,{useNewUrlParser:true,useUnifiedTopology: true}).then(()=>{
    console.log('you connected to MongoDb'); // נכתוב הודעה לקונסול שבסיס הנתונים מחובר
});
//-----------------------------------------------------------

//--------------- כל נקודות הקצה הקיימות באפליקציה ---------

//--  במידה ופונים לניתוב של המוצרים שלי הוא מפנה בהתאם---
app.use('/product',ProductRouter); // מקבל ניתוב ובנוסף לראוטר המטפל בניתוב מוצרים ושכבה שמטפלת בהרשאות 
//--  במידה ופונים לניתוב של המשתמשים שלי הוא מפנה בהתאם---
app.use('/user',UserRouter); // מקבל ניתוב ובנוסף לראוטר המטפל בניתוב משתמשים
// במידה וקיבלתי נתיב שהוא לא אחד מהרשומים למעלה נחזיר למשתמש הדף לא נמצאה
app.all('*',(req,res)=>{ // יש לוודא שנתיב זה יהיה האחרון הוא יתפוס מה שלא נתפס בניתובים הקודמים
  res.status(404).json({Msg:"404 page not found cheak your route "})
});
//-----------------------------------------------------------

//----------------------ייצא----------------------------
module.exports=app; // לייצא החוצה
